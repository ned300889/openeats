#!/bin/zsh

dbpass=$(openssl rand -base64 16)
mysqlroot=$(openssl rand -base64 16)
djangopass=$(openssl rand -base64 32)


echo 'What is the name of your website (please include.com)'

read website

curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get install -y nodejs npm
apt-get update 
apt-get upgrade
apt-get install -y build-essential python3 python3-pip libssl-dev apt-get libmysqlclient-dev libssl-dev default-libmysqlclient-dev python3-dev python-MySQLdb python-dev libmysqlclient-dev 
pip3 install mysqlclient
sudo pip install django --upgrade
pip3 install django-filter

debconf-set-selections <<< "mysql-server-5.7 mysql-server/root_password password $mysqlroot"
sudo debconf-set-selections <<< "mysql-server-5.7 mysql-server/root_password_again password $mysqlroot"
apt-get -y install 'mysql-server-5.7'


cat >/tmp/user.sql <<EOL
CREATE USER 'openeats'@'localhost' IDENTIFIED BY  '${dbpass}';
CREATE DATABASE openeatsi CHARACTER SET utf8 COLLATE utf8_bin;
GRANT ALL ON openeats.* TO 'openeats'@'localhost';
FLUSH PRIVILEGES;
EOL

mysql -u root --password="$myssqlroot" </tmp/user.sql >/dev/null 2>&1

rm /tmp/user.sql

mkdir  -p /opt/openeats/{openeats-apache2,openeats-api}
git clone https://github.com/open-eats/openeats-api.git /opt/openeats/openeats-api/
pip3 install -U -r /opt/openeats/openeats-api/base/requirements.txt
touch /opt/openeats/openeats-api/.env
cat >/opt/openeats/openeats-api/.env <<EOL
# Database config
MYSQL_HOST=localhost
MYSQL_DATABASE=openeats
MYSQL_USER=openeats
MYSQL_ROOT_PASSWORD='${dbpass}'

# Django config
API_URL=0.0.0.0:5210
API_PORT=5210
DJANGO_SECRET_KEY=${djangopass}
DJANGO_SETTINGS_MODULE=base.settings
DJANGO_DEBUG=False
ALLOWED_HOST=${website}
  
# If you are serving content behind an HTTPS proxy,
# Set this to `true`.
# See: <https://docs.djangoproject.com/en/1.10/ref/settings/#secure-proxy-ssl-header>
HTTP_X_FORWARDED_PROTO=false
  
# Node config
NODE_ENV=development
NODE_URL=${website}:5200
NODE_LOCALE=en
EOL

BASEDIR=/opt/openeats/openeats-api
cat>/opt/openeats/openeats-api/base/prod-entrypoint.sh<<EOL 

 #Update the DB if it needs it and compile static files.
python3 ${BASEDIR}/manage.py migrate --no-input
python3 ${BASEDIR}/manage.py collectstatic --no-input

 # Start up gunicorn
bash ${BASEDIR}/base/gunicorn_start.sh
EOL

NAME="OpenEats"                     
DJANGODIR=/opt/openeats/openeats-api
USER=root                           
GROUP=root                          
NUM_WORKERS=5                       
DJANGO_SETTINGS_MODULE=base.settings
DJANGO_WSGI_MODULE=base.wsgi        
NODE_API_URL=https://${website}

cat>/opt/openeats/openeats-api/base/gunicorn_start.sh<<EOL
#!/usr/bin/env sh

NAME="OpenEats"                                   # Name of the application
DJANGODIR=/opt/openeats/openeats-api        	  # Django project directory
USER=root                                         # the user to run as
GROUP=root                                        # the group to run as
NUM_WORKERS=5                                     # how many worker processes should Gunicorn spawn
DJANGO_SETTINGS_MODULE=base.settings              # which settings file should Django use
DJANGO_WSGI_MODULE=base.wsgi                      # WSGI module name

echo "Starting ${NAME} as `whoami`"

# Activate the virtual environment
cd ${DJANGODIR}
export DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
export PYTHONPATH=${DJANGODIR}:${PYTHONPATH}

# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
exec gunicorn ${DJANGO_WSGI_MODULE}:application \
  --name ${NAME} \
  --workers ${NUM_WORKERS} \
  --user=${USER} --group=${GROUP} \
  --bind=${API_URL}
EOL
touch /lib/systemd/system/openeats.service
cat>/lib/systemd/system/openeats.service<<EOL
[Unit]
Description=OpenEats
After = mysql.service systemd-user-sessions.service network-online.target systemd-networkd.service

[Service]
Type=simple
User=root

EnvironmentFile=/opt/openeats/openeats-api/.env
ExecStart =/usr/bin/ionice -c 3 /usr/bin/nice -n 18 /bin/bash /opt/openeats/openeats-api/base/prod-entrypoint.sh
Restart = always
RestartSec = 1

# Configures the time to wait before service is stopped forcefully.
TimeoutStopSec=2000

[Install]
WantedBy=multi-user.target

EOL

systemctl daemon-reload
systemctl start openeats.service
mkdir /opt/openeats/openeats-web/
git clone https://github.com/open-eats/openeats-web.git /opt/openeats/openeats-web/

touch /opt/openeats/openeats-web/.env
cat>/opt/openeats/openeats-web/.env<<EOL

# Database config
export MYSQL_HOST=localhost
export MYSQL_DATABASE=openeats
export MYSQL_USER=openeats
export MYSQL_ROOT_PASSWORD='${dbpass}'

# Django config
export API_URL=0.0.0.0:5210
export API_PORT=5210
export DJANGO_SECRET_KEY=${djangopass}
export DJANGO_SETTINGS_MODULE=base.settings
export DJANGO_DEBUG=False
export ALLOWED_HOST=${website}

# If you are serving content behind an HTTPS proxy,
# Set this to `true`.
# See: https://docs.djangoproject.com/en/1.10/ref/settings/#secure-proxy-ssl-header
export HTTP_X_FORWARDED_PROTO=false 

# Node config
export NODE_ENV=development
export NODE_URL=${website}:5200 
export NODE_LOCALE=en
EOL


#source /opt/openeats/openeats-web/.env

cd /opt/openeats/openeats-web/
. ./.env
sudo npm install
sudo npm install yarn
sudo /opt/openeats/openeats-web/node_modules/yarn/bin/yarn start

ln -s /opt/openeats/openeats-web/build /opt/openeats/openeats-apache2/public-ui
ln -s /opt/openeats/openeats-api/static-files /opt/openeats/openeats-apache2/static-files
ln -s /opt/openeats/openeats-api/site-media /opt/openeats/openeats-apache2/site-media


cat>/etc/apache2/sites-available/$website.conf<<EOL
   <VirtualHost *:80>
       ServerName ${website}
       ServerAdmin postmaster@domain.com
       Header always set Strict-Transport-Security "max-age=15768000"
       DocumentRoot "/opt/openeats/openeats-apache2/public-ui"
       <Directory "/opt/openeats/openeats-apache2/public-ui">
           # HANDLE 404 ERROR ON REFRESH
           RewriteEngine On
           RewriteBase /
           RewriteRule ^index\.html$ - [L]
           RewriteCond %{REQUEST_FILENAME} !-f
           RewriteCond %{REQUEST_FILENAME} !-d
           RewriteRule . /index.html [L]
           # HANDLE 404 ERROR ON REFRESH END
           Options Indexes FollowSymLinks MultiViews
           AllowOverride All
           Order allow,deny
           allow from all
           Require all granted
       </Directory>

       Alias /static /opt/openeats/openeats-apache2/public-ui/static
       <Location "/static/">
           Options Indexes FollowSymLinks MultiViews
           AllowOverride All
           Order allow,deny
           allow from all
           Require all granted
           AddOutputFilterByType DEFLATE text/plain
           AddOutputFilterByType DEFLATE text/javascript
           AddOutputFilterByType DEFLATE application/javascript
           AddOutputFilterByType DEFLATE application/xml
           AddOutputFilterByType DEFLATE application/xhtml+xml
       </Location>

       <Location "/api/">
           ProxyPass http://127.0.0.1:5210/api/
           ProxyPassReverse http://127.0.0.1:5210/api/
       </Location>

       <Location "/admin/">
           ProxyPass http://127.0.0.1:5210/admin/
           ProxyPassReverse http://127.0.0.1:5210/admin/
       </Location>

       Alias /static-files /opt/openeats/openeats-apache2/static-files
       <Directory "/opt/openeats/openeats-apache2/static-files">
           Options Indexes FollowSymLinks MultiViews
           AllowOverride All
           Order allow,deny
           allow from all
           Require all granted
       </Directory>
       Alias /site-media /opt/openeats/openeats-apache2/site-media
       <Directory "/opt/openeats/openeats-apache2/site-media">
           Options Indexes FollowSymLinks MultiViews
           AllowOverride All
           Order allow,deny
           allow from all
           Require all granted
       </Directory>
   </VirtualHost>
EOL
chmod -R 775 /opt/openeats/
chown -R www-data: /opt/openeats/openeats-apache2
a2enmod rewrite headers proxy proxy proxy_ajp proxy_http rewrite deflate headers proxy_balancer proxy_connect proxy_html  
a2ensite $website
systemctl restart openeats.service
service apache2 restart
echo '###### Are these guys fucking insane! #####'
